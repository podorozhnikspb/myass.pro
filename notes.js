
window.tagStyles = {
  "Python":       { bg: "#e0f7fa", color: "#000000" },
  "YouTube API":  { bg: "#fff3cd", color: "#000000" },
  "Telegram API": { bg: "#ffe0f0", color: "#000000" },
  "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è":{ bg: "#e6ee9c", color: "#000000" },
  "–ü–∞—Ä—Å–∏–Ω–≥":      { bg: "#d1c4e9", color: "#000000" },
  "–°–∫—Ä–∏–ø—Ç—ã":      { bg: "#f8bbd0", color: "#000000" },
  "Cron":         { bg: "#c8e6c9", color: "#000000" }
};

window.notes = [
  {
    title: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ –Ω–∞ YouTube",
    date: "2025-05-18",
    tags: ["Python", "YouTube API", "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è"],
    content: `–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –≤–∏–¥–µ–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç —É–ø—Ä–æ—Å—Ç–∏—Ç—å —Ä—É—Ç–∏–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏.

> ¬´–õ—É—á—à–µ–µ ‚Äî –≤—Ä–∞–≥ —Ö–æ—Ä–æ—à–µ–≥–æ. –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–π —Ç–æ–ª—å–∫–æ —Ç–æ, —á—Ç–æ —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ä—É–∫–∞–º–∏.¬ª

–ü—Ä–∏–º–µ—Ä —Å–∫—Ä–∏–ø—Ç–∞:

from googleapiclient.discovery import build

def upload(video_path, title):
    youtube = build("youtube", "v3", credentials=creds)
    request = youtube.videos().insert(
        part="snippet,status",
        body={"snippet": {"title": title}},
        media_body=video_path
    )
    request.execute()
`
  },
  {
    title: "–ü–∞—Ä—Å–∏–Ω–≥ Telegram API —Å –ø–æ–º–æ—â—å—é Telethon",
    date: "2025-05-20",
    tags: ["Python", "Telegram API", "–ü–∞—Ä—Å–∏–Ω–≥"],
    content: `–î–ª—è —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Telegram —É–¥–æ–±–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫—É Telethon.

> ¬´–î–∞–Ω–Ω—ã–µ ‚Äî —ç—Ç–æ –Ω–æ–≤—ã–π –Ω–µ—Ñ—Ç—å. –ù–æ —Å–Ω–∞—á–∞–ª–∞ –∏—Ö –Ω—É–∂–Ω–æ –¥–æ–±—ã—Ç—å.¬ª

from telethon import TelegramClient

client = TelegramClient("session", api_id, api_hash)
await client.start()

participants = await client.get_participants("somechannel")
for user in participants:
    print(user.username)
`
  },
  {
    title: "–ó–∞–ø—É—Å–∫ Python-—Å–∫—Ä–∏–ø—Ç–æ–≤ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é (cron)",
    date: "2025-05-21",
    tags: ["Python", "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è", "Cron"],
    content: `–ï—Å–ª–∏ –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å –∑–∞–¥–∞—á–∏ —Ä–µ–≥—É–ª—è—Ä–Ω–æ ‚Äî –∏—Å–ø–æ–ª—å–∑—É–π cron.

üïí –ü—Ä–∏–º–µ—Ä –∑–∞–¥–∞–Ω–∏—è:

0 */6 * * * /usr/bin/python3 /home/user/upload.py

–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏ –º–æ–∂–Ω–æ —Ç–∞–∫:

cat /var/log/syslog | grep CRON
`
  },
  {
    title: "–ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π Telegram –±–æ—Ç",
    date: "2025-05-22",
    tags: ["Python", "Telegram API", "–°–∫—Ä–∏–ø—Ç—ã"],
    content: `–ü—Ä–æ—Å—Ç–æ–π Telegram-–±–æ—Ç –Ω–∞ Telebot:

import telebot

bot = telebot.TeleBot("TOKEN")

@bot.message_handler(commands=["start"])
def send_welcome(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç!")

bot.polling()
`
  },
  {
    title: "–•—Ä–∞–Ω–∏–º –∫–æ–Ω—Ñ–∏–≥–∏ –æ—Ç–¥–µ–ª—å–Ω–æ –æ—Ç –∫–æ–¥–∞",
    date: "2025-05-23",
    tags: ["Python", "–°–∫—Ä–∏–ø—Ç—ã"],
    content: `–•—Ä–∞–Ω–µ–Ω–∏–µ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤–Ω—É—Ç—Ä–∏ –∫–æ–¥–∞ ‚Äî –ø–ª–æ—Ö–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞.

–§–∞–π–ª .env:

API_KEY=abc123
SECRET=xyz456

Python:

from dotenv import load_dotenv
import os

load_dotenv()
key = os.getenv("API_KEY")
`
  }
];
